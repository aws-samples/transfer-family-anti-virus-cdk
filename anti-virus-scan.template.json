{
    "Resources": {
     "Bucket83908E77": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
       "aws:cdk:path": "VirusScan/Bucket/Resource"
      }
     },
     "BucketPolicyE9A3008A": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
       "Bucket": {
        "Ref": "Bucket83908E77"
       },
       "PolicyDocument": {
        "Statement": [
         {
          "Action": "s3:GetObject",
          "Condition": {
           "StringNotEquals": {
            "s3:ExistingObjectTag/Virus_Scan_Result": "CLEAN",
            "aws:PrincipalArn": {
             "Fn::GetAtt": [
              "workflowLambdaRole790E9D55",
              "Arn"
             ]
            }
           }
          },
          "Effect": "Deny",
          "Principal": {
           "AWS": "*"
          },
          "Resource": [
           {
            "Fn::GetAtt": [
             "Bucket83908E77",
             "Arn"
            ]
           },
           {
            "Fn::Join": [
             "",
             [
              {
               "Fn::GetAtt": [
                "Bucket83908E77",
                "Arn"
               ]
              },
              "/*"
             ]
            ]
           }
          ]
         }
        ],
        "Version": "2012-10-17"
       }
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/Bucket/Policy/Resource"
      }
     },
     "authproviderAuthLambdaExecutionRole679C9499": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "lambda.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "ManagedPolicyArns": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ]
         ]
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/authprovider/AuthLambdaExecutionRole/Resource"
      }
     },
     "authprovidergetsecretspolicy4DCC9D2A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
       "PolicyDocument": {
        "Statement": [
         {
          "Action": "secretsmanager:GetSecretValue",
          "Effect": "Allow",
          "Resource": "arn:aws:secretsmanager:*:*:secret:SFTP/*"
         }
        ],
        "Version": "2012-10-17"
       },
       "PolicyName": "authprovidergetsecretspolicy4DCC9D2A",
       "Roles": [
        {
         "Ref": "authproviderAuthLambdaExecutionRole679C9499"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/authprovider/getsecretspolicy/Resource"
      }
     },
     "authproviderAuthHandler6D1D3113": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
       "Code": {
        "S3Bucket": {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "S3Key": "58df2ed9a6ce975d5653baa3e5f7c51abffb5abb4009d51132316aed6ca7b551.zip"
       },
       "Role": {
        "Fn::GetAtt": [
         "authproviderAuthLambdaExecutionRole679C9499",
         "Arn"
        ]
       },
       "Environment": {
        "Variables": {
         "SecretsManagerRegion": {
          "Ref": "AWS::Region"
         }
        }
       },
       "Handler": "smauthentication.lambda_handler",
       "Runtime": "python3.7"
      },
      "DependsOn": [
       "authproviderAuthLambdaExecutionRole679C9499"
      ],
      "Metadata": {
       "aws:cdk:path": "VirusScan/authprovider/AuthHandler/Resource",
       "aws:asset:path": "asset.58df2ed9a6ce975d5653baa3e5f7c51abffb5abb4009d51132316aed6ca7b551",
       "aws:asset:is-bundled": false,
       "aws:asset:property": "Code"
      }
     },
     "authproviderAuthHandlerInvokeBBXkSxCBVFTWxFITV4Ah2auuu28iKwgkhkwiDO5REyM2E7D601E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
       "Action": "lambda:InvokeFunction",
       "FunctionName": {
        "Fn::GetAtt": [
         "authproviderAuthHandler6D1D3113",
         "Arn"
        ]
       },
       "Principal": "transfer.amazonaws.com",
       "SourceArn": {
        "Fn::GetAtt": [
         "myserverTransferServer16CD2830",
         "Arn"
        ]
       }
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/authprovider/AuthHandler/InvokeBBXkSxCBVFTWxFITV4Ah2auuu28iKwgkhkwiDO5REyM="
      }
     },
     "authproviderUserRoleED7A5E22": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "transfer.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "Description": "VirusScan User Role",
       "Policies": [
        {
         "PolicyDocument": {
          "Statement": [
           {
            "Action": [
             "s3:GetBucketLocation",
             "s3:ListAllMyBuckets",
             "s3:ListBucket"
            ],
            "Effect": "Allow",
            "Resource": "*"
           },
           {
            "Action": [
             "s3:DeleteObject",
             "s3:DeleteObjectVersion",
             "s3:GetObject",
             "s3:GetObjectACL",
             "s3:GetObjectVersion",
             "s3:PutObject",
             "s3:PutObjectACL"
            ],
            "Effect": "Allow",
            "Resource": [
             {
              "Fn::GetAtt": [
               "Bucket83908E77",
               "Arn"
              ]
             },
             {
              "Fn::Join": [
               "",
               [
                {
                 "Fn::GetAtt": [
                  "Bucket83908E77",
                  "Arn"
                 ]
                },
                "/*"
               ]
              ]
             }
            ]
           }
          ],
          "Version": "2012-10-17"
         },
         "PolicyName": "userpolicy"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/authprovider/UserRole/Resource"
      }
     },
     "authproviderclient10B40C736": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
       "Name": "SFTP/client1",
       "SecretString": {
        "Fn::Join": [
         "",
         [
          "{\"Password\":\"khzqgrih\",\"Role\":\"",
          {
           "Fn::GetAtt": [
            "authproviderUserRoleED7A5E22",
            "Arn"
           ]
          },
          "\",\"HomeDirectory\":\"/",
          {
           "Ref": "Bucket83908E77"
          },
          "\"}"
         ]
        ]
       }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
       "aws:cdk:path": "VirusScan/authprovider/client1/Resource"
      }
     },
     "workflowLambdaRole790E9D55": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "lambda.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "ManagedPolicyArns": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ]
         ]
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/workflow/LambdaRole/Resource"
      }
     },
     "workflowLambdaRoleDefaultPolicy00234C51": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
       "PolicyDocument": {
        "Statement": [
         {
          "Action": "s3:GetObject",
          "Effect": "Allow",
          "Resource": {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "Bucket83908E77",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          }
         },
         {
          "Action": [
           "xray:PutTelemetryRecords",
           "xray:PutTraceSegments"
          ],
          "Effect": "Allow",
          "Resource": "*"
         }
        ],
        "Version": "2012-10-17"
       },
       "PolicyName": "workflowLambdaRoleDefaultPolicy00234C51",
       "Roles": [
        {
         "Ref": "workflowLambdaRole790E9D55"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/workflow/LambdaRole/DefaultPolicy/Resource"
      }
     },
     "workflowScanFile923B547D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
       "Code": {
        "ImageUri": {
         "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:9f98348038c902b1af2c0f93ca687635cbb587b4e52f54838bb69424beb3d294"
        }
       },
       "Role": {
        "Fn::GetAtt": [
         "workflowLambdaRole790E9D55",
         "Arn"
        ]
       },
       "Architectures": [
        "x86_64"
       ],
       "Description": "Scans incoming file from TransferFamily Server",
       "EphemeralStorage": {
        "Size": 10240
       },
       "MemorySize": 2048,
       "PackageType": "Image",
       "Timeout": 600,
       "TracingConfig": {
        "Mode": "Active"
       }
      },
      "DependsOn": [
       "workflowLambdaRoleDefaultPolicy00234C51",
       "workflowLambdaRole790E9D55"
      ],
      "Metadata": {
       "aws:cdk:path": "VirusScan/workflow/ScanFile/Resource",
       "aws:asset:path": "asset.9f98348038c902b1af2c0f93ca687635cbb587b4e52f54838bb69424beb3d294",
       "aws:asset:dockerfile-path": "Dockerfile",
       "aws:asset:docker-build-args": {
        "--platform": "linux/amd64"
       },
       "aws:asset:property": "Code.ImageUri"
      }
     },
     "workflowScanFileLogRetention14236C8C": {
      "Type": "Custom::LogRetention",
      "Properties": {
       "ServiceToken": {
        "Fn::GetAtt": [
         "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
         "Arn"
        ]
       },
       "LogGroupName": {
        "Fn::Join": [
         "",
         [
          "/aws/lambda/",
          {
           "Ref": "workflowScanFile923B547D"
          }
         ]
        ]
       },
       "RetentionInDays": 14
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/workflow/ScanFile/LogRetention/Resource"
      }
     },
     "workflowVirusScanWorkflow29B00FBD": {
      "Type": "AWS::Transfer::Workflow",
      "Properties": {
       "Steps": [
        {
         "CustomStepDetails": {
          "Name": "VirusScan",
          "Target": {
           "Fn::GetAtt": [
            "workflowScanFile923B547D",
            "Arn"
           ]
          },
          "TimeoutSeconds": 600
         },
         "Type": "CUSTOM"
        },
        {
         "TagStepDetails": {
          "Name": "TAG_SUCCESS",
          "Tags": [
           {
            "Key": "VIRUS_SCAN_RESULT",
            "Value": "CLEAN"
           }
          ]
         },
         "Type": "TAG"
        }
       ],
       "OnExceptionSteps": [
        {
         "TagStepDetails": {
          "Name": "TAG_FAILURE",
          "Tags": [
           {
            "Key": "VIRUS_SCAN_RESULT",
            "Value": "INFECTED"
           }
          ]
         },
         "Type": "TAG"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/workflow/VirusScanWorkflow"
      }
     },
     "workflowworkflowupdatepolicy6C51827F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
       "PolicyDocument": {
        "Statement": [
         {
          "Action": "transfer:SendWorkflowStepState",
          "Effect": "Allow",
          "Resource": {
           "Fn::GetAtt": [
            "workflowVirusScanWorkflow29B00FBD",
            "Arn"
           ]
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "PolicyName": "workflowworkflowupdatepolicy6C51827F",
       "Roles": [
        {
         "Ref": "workflowLambdaRole790E9D55"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/workflow/workflowupdate-policy/Resource"
      }
     },
     "workflowWorkflowExecutionRole9993BE51": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "transfer.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       }
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/workflow/WorkflowExecutionRole/Resource"
      }
     },
     "workflowWorkflowExecutionRoleDefaultPolicyDA029CC4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
       "PolicyDocument": {
        "Statement": [
         {
          "Action": "s3:PutObjectTagging",
          "Effect": "Allow",
          "Resource": {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "Bucket83908E77",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          }
         },
         {
          "Action": "lambda:InvokeFunction",
          "Effect": "Allow",
          "Resource": [
           {
            "Fn::GetAtt": [
             "workflowScanFile923B547D",
             "Arn"
            ]
           },
           {
            "Fn::Join": [
             "",
             [
              {
               "Fn::GetAtt": [
                "workflowScanFile923B547D",
                "Arn"
               ]
              },
              ":*"
             ]
            ]
           }
          ]
         }
        ],
        "Version": "2012-10-17"
       },
       "PolicyName": "workflowWorkflowExecutionRoleDefaultPolicyDA029CC4",
       "Roles": [
        {
         "Ref": "workflowWorkflowExecutionRole9993BE51"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/workflow/WorkflowExecutionRole/DefaultPolicy/Resource"
      }
     },
     "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "lambda.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "ManagedPolicyArns": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ]
         ]
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
      }
     },
     "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
       "PolicyDocument": {
        "Statement": [
         {
          "Action": [
           "logs:DeleteRetentionPolicy",
           "logs:PutRetentionPolicy"
          ],
          "Effect": "Allow",
          "Resource": "*"
         }
        ],
        "Version": "2012-10-17"
       },
       "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
       "Roles": [
        {
         "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
      }
     },
     "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
       "Handler": "index.handler",
       "Runtime": "nodejs14.x",
       "Code": {
        "S3Bucket": {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "S3Key": "eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8.zip"
       },
       "Role": {
        "Fn::GetAtt": [
         "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
         "Arn"
        ]
       }
      },
      "DependsOn": [
       "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
       "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Metadata": {
       "aws:cdk:path": "VirusScan/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
       "aws:asset:path": "asset.eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8",
       "aws:asset:is-bundled": false,
       "aws:asset:property": "Code"
      }
     },
     "myserverLoggingRole73902312": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "transfer.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "ManagedPolicyArns": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::aws:policy/CloudWatchLogsFullAccess"
          ]
         ]
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/myserver/LoggingRole/Resource"
      }
     },
     "myserverTransferServer16CD2830": {
      "Type": "AWS::Transfer::Server",
      "Properties": {
       "Domain": "S3",
       "EndpointType": "PUBLIC",
       "IdentityProviderDetails": {
        "Function": {
         "Fn::GetAtt": [
          "authproviderAuthHandler6D1D3113",
          "Arn"
         ]
        }
       },
       "IdentityProviderType": "AWS_LAMBDA",
       "LoggingRole": {
        "Fn::GetAtt": [
         "myserverLoggingRole73902312",
         "Arn"
        ]
       },
       "Protocols": [
        "SFTP"
       ],
       "WorkflowDetails": {
        "OnUpload": [
         {
          "ExecutionRole": {
           "Fn::GetAtt": [
            "workflowWorkflowExecutionRole9993BE51",
            "Arn"
           ]
          },
          "WorkflowId": {
           "Ref": "workflowVirusScanWorkflow29B00FBD"
          }
         }
        ]
       }
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/myserver/TransferServer"
      }
     },
     "avcodebuildAVScanRepoE28E3A83": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
       "RepositoryName": "clamav-scan-file"
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AVScanRepo"
      }
     },
     "avcodebuildAVScanUpdateDefinitionsRoleD7D471EE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "codebuild.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       }
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AVScanUpdateDefinitions/Role/Resource"
      }
     },
     "avcodebuildAVScanUpdateDefinitionsRoleDefaultPolicy17463D5C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
       "PolicyDocument": {
        "Statement": [
         {
          "Action": [
           "s3:GetBucket*",
           "s3:GetObject*",
           "s3:List*"
          ],
          "Effect": "Allow",
          "Resource": [
           {
            "Fn::Join": [
             "",
             [
              "arn:",
              {
               "Ref": "AWS::Partition"
              },
              ":s3:::",
              {
               "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
              },
              "/e768a72eaafb5f049b9dc9b75abb345b79d2b1aefdea97df51d3601c1e0de62a.zip"
             ]
            ]
           },
           {
            "Fn::Join": [
             "",
             [
              "arn:",
              {
               "Ref": "AWS::Partition"
              },
              ":s3:::",
              {
               "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
              }
             ]
            ]
           }
          ]
         },
         {
          "Action": [
           "logs:CreateLogGroup",
           "logs:CreateLogStream",
           "logs:PutLogEvents"
          ],
          "Effect": "Allow",
          "Resource": [
           {
            "Fn::Join": [
             "",
             [
              "arn:",
              {
               "Ref": "AWS::Partition"
              },
              ":logs:",
              {
               "Ref": "AWS::Region"
              },
              ":",
              {
               "Ref": "AWS::AccountId"
              },
              ":log-group:/aws/codebuild/",
              {
               "Ref": "avcodebuildAVScanUpdateDefinitionsE4A3E58B"
              },
              ":*"
             ]
            ]
           },
           {
            "Fn::Join": [
             "",
             [
              "arn:",
              {
               "Ref": "AWS::Partition"
              },
              ":logs:",
              {
               "Ref": "AWS::Region"
              },
              ":",
              {
               "Ref": "AWS::AccountId"
              },
              ":log-group:/aws/codebuild/",
              {
               "Ref": "avcodebuildAVScanUpdateDefinitionsE4A3E58B"
              }
             ]
            ]
           }
          ]
         },
         {
          "Action": [
           "codebuild:BatchPutCodeCoverages",
           "codebuild:BatchPutTestCases",
           "codebuild:CreateReport",
           "codebuild:CreateReportGroup",
           "codebuild:UpdateReport"
          ],
          "Effect": "Allow",
          "Resource": {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":codebuild:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":report-group/",
             {
              "Ref": "avcodebuildAVScanUpdateDefinitionsE4A3E58B"
             },
             "-*"
            ]
           ]
          }
         },
         {
          "Action": "ecr:GetAuthorizationToken",
          "Effect": "Allow",
          "Resource": "*"
         },
         {
          "Action": [
           "ecr:BatchCheckLayerAvailability",
           "ecr:CompleteLayerUpload",
           "ecr:InitiateLayerUpload",
           "ecr:PutImage",
           "ecr:UploadLayerPart"
          ],
          "Effect": "Allow",
          "Resource": {
           "Fn::GetAtt": [
            "avcodebuildAVScanRepoE28E3A83",
            "Arn"
           ]
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "PolicyName": "avcodebuildAVScanUpdateDefinitionsRoleDefaultPolicy17463D5C",
       "Roles": [
        {
         "Ref": "avcodebuildAVScanUpdateDefinitionsRoleD7D471EE"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AVScanUpdateDefinitions/Role/DefaultPolicy/Resource"
      }
     },
     "avcodebuildAVScanUpdateDefinitionsE4A3E58B": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
       "Artifacts": {
        "Type": "NO_ARTIFACTS"
       },
       "Environment": {
        "ComputeType": "BUILD_GENERAL1_SMALL",
        "EnvironmentVariables": [
         {
          "Name": "REPO_URI",
          "Type": "PLAINTEXT",
          "Value": {
           "Fn::GetAtt": [
            "avcodebuildAVScanRepoE28E3A83",
            "RepositoryUri"
           ]
          }
         },
         {
          "Name": "AWS_DEFAULT_REGION",
          "Type": "PLAINTEXT",
          "Value": {
           "Ref": "AWS::Region"
          }
         },
         {
          "Name": "AWS_ACCOUNT_ID",
          "Type": "PLAINTEXT",
          "Value": {
           "Ref": "AWS::AccountId"
          }
         }
        ],
        "Image": "aws/codebuild/standard:6.0",
        "ImagePullCredentialsType": "CODEBUILD",
        "PrivilegedMode": true,
        "Type": "LINUX_CONTAINER"
       },
       "ServiceRole": {
        "Fn::GetAtt": [
         "avcodebuildAVScanUpdateDefinitionsRoleD7D471EE",
         "Arn"
        ]
       },
       "Source": {
        "Location": {
         "Fn::Join": [
          "",
          [
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/e768a72eaafb5f049b9dc9b75abb345b79d2b1aefdea97df51d3601c1e0de62a.zip"
          ]
         ]
        },
        "Type": "S3"
       },
       "Cache": {
        "Type": "NO_CACHE"
       },
       "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AVScanUpdateDefinitions/Resource"
      }
     },
     "avcodebuildAVScanUpdateDefinitionseventsuccessid3F4BB6A9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
       "EventPattern": {
        "source": [
         "aws.codebuild"
        ],
        "detail": {
         "project-name": [
          {
           "Ref": "avcodebuildAVScanUpdateDefinitionsE4A3E58B"
          }
         ],
         "build-status": [
          "SUCCEEDED"
         ]
        },
        "detail-type": [
         "CodeBuild Build State Change"
        ]
       },
       "State": "ENABLED",
       "Targets": [
        {
         "Arn": {
          "Fn::GetAtt": [
           "avcodebuildupdateAVdefinitions51A7D9E3",
           "Arn"
          ]
         },
         "Id": "Target0"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AVScanUpdateDefinitions/eventsuccessid/Resource"
      }
     },
     "avcodebuildAVScanUpdateDefinitionseventsuccessidAllowEventRuleVirusScanavcodebuildupdateAVdefinitions903ABFEF8269CEA4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
       "Action": "lambda:InvokeFunction",
       "FunctionName": {
        "Fn::GetAtt": [
         "avcodebuildupdateAVdefinitions51A7D9E3",
         "Arn"
        ]
       },
       "Principal": "events.amazonaws.com",
       "SourceArn": {
        "Fn::GetAtt": [
         "avcodebuildAVScanUpdateDefinitionseventsuccessid3F4BB6A9",
         "Arn"
        ]
       }
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AVScanUpdateDefinitions/eventsuccessid/AllowEventRuleVirusScanavcodebuildupdateAVdefinitions903ABFEF"
      }
     },
     "avcodebuildAVScanUpdateDefinitionsEventsRoleBF6E9955": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "events.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       }
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AVScanUpdateDefinitions/EventsRole/Resource"
      }
     },
     "avcodebuildAVScanUpdateDefinitionsEventsRoleDefaultPolicyE36E8DD9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
       "PolicyDocument": {
        "Statement": [
         {
          "Action": "codebuild:StartBuild",
          "Effect": "Allow",
          "Resource": {
           "Fn::GetAtt": [
            "avcodebuildAVScanUpdateDefinitionsE4A3E58B",
            "Arn"
           ]
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "PolicyName": "avcodebuildAVScanUpdateDefinitionsEventsRoleDefaultPolicyE36E8DD9",
       "Roles": [
        {
         "Ref": "avcodebuildAVScanUpdateDefinitionsEventsRoleBF6E9955"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AVScanUpdateDefinitions/EventsRole/DefaultPolicy/Resource"
      }
     },
     "avcodebuildupdateAVdefinitionsServiceRoleE740E3E2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": "lambda.amazonaws.com"
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "ManagedPolicyArns": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ]
         ]
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/updateAVdefinitions/ServiceRole/Resource"
      }
     },
     "avcodebuildupdateAVdefinitions51A7D9E3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
       "Code": {
        "S3Bucket": {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "S3Key": "f904ad5ccd73d4f2ba046ceea6f5b15533823c7114cdb8b256db8b0db8478480.zip"
       },
       "Role": {
        "Fn::GetAtt": [
         "avcodebuildupdateAVdefinitionsServiceRoleE740E3E2",
         "Arn"
        ]
       },
       "Environment": {
        "Variables": {
         "imageuri": {
          "Fn::GetAtt": [
           "avcodebuildAVScanRepoE28E3A83",
           "RepositoryUri"
          ]
         },
         "funcname": {
          "Fn::GetAtt": [
           "workflowScanFile923B547D",
           "Arn"
          ]
         }
        }
       },
       "Handler": "updatefunc.lambda_handler",
       "Runtime": "python3.7"
      },
      "DependsOn": [
       "avcodebuildupdateAVdefinitionsServiceRoleE740E3E2"
      ],
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/updateAVdefinitions/Resource",
       "aws:asset:path": "asset.f904ad5ccd73d4f2ba046ceea6f5b15533823c7114cdb8b256db8b0db8478480",
       "aws:asset:is-bundled": false,
       "aws:asset:property": "Code"
      }
     },
     "avcodebuildAVupdatesrule33BDED51": {
      "Type": "AWS::Events::Rule",
      "Properties": {
       "ScheduleExpression": "cron(0 0 * * ? *)",
       "State": "ENABLED",
       "Targets": [
        {
         "Arn": {
          "Fn::GetAtt": [
           "avcodebuildAVScanUpdateDefinitionsE4A3E58B",
           "Arn"
          ]
         },
         "Id": "Target0",
         "RoleArn": {
          "Fn::GetAtt": [
           "avcodebuildAVScanUpdateDefinitionsEventsRoleBF6E9955",
           "Arn"
          ]
         }
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/avcodebuild/AV-updates-rule/Resource"
      }
     },
     "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
       "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Ry27DIBD8ltwJfbhSz02qSpUq1XIPPUYEb1xim41YSBRZ/HsXcB6nmVl2Zwd4li9P8nGhTrTUbb8czFZOP17pXnBpM1Elp1XQPXix3tmZFahxMPp8K8+6iJUiiMKoUU4NDpC6Mt6GCotiUOO2VXL6CFZ7gzad3fMa3GiIknpHtnafo+rg0hEFVRtFBJ7kWwJBoB2rUVluc3yZrJNTYVEwXEbuHMs0n3FiOCAZj+6crpGzXyscGDuSX9g14MHmlN4pS7u0jFt/0fW7AU9lozuCi0JjC9tghlZOtcM96JxnphzoyEbEe8P8UowxipyI/6IztishCIPTIK6Ei9/BH0K2W6NtTXmT+uz/0D5U8lVWiz0Zs3SBo44gm4L/zML7TfYBAAA="
      },
      "Metadata": {
       "aws:cdk:path": "VirusScan/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
     }
    },
    "Outputs": {
     "SFTPEndpoint": {
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::GetAtt": [
           "myserverTransferServer16CD2830",
           "ServerId"
          ]
         },
         ".server.transfer.",
         {
          "Ref": "AWS::Region"
         },
         ".amazonaws.com"
        ]
       ]
      }
     },
     "SFTPBucket": {
      "Value": {
       "Ref": "Bucket83908E77"
      }
     },
     "Password": {
      "Value": "khzqgrih"
     },
     "Username": {
      "Value": "client1"
     }
    },
    "Conditions": {
     "CDKMetadataAvailable": {
      "Fn::Or": [
       {
        "Fn::Or": [
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "af-south-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-east-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-northeast-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-northeast-2"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-south-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-southeast-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-southeast-2"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ca-central-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "cn-north-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "cn-northwest-1"
          ]
         }
        ]
       },
       {
        "Fn::Or": [
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-central-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-north-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-south-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-west-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-west-2"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-west-3"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "me-south-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "sa-east-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "us-east-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "us-east-2"
          ]
         }
        ]
       },
       {
        "Fn::Or": [
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "us-west-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "us-west-2"
          ]
         }
        ]
       }
      ]
     }
    }
   }